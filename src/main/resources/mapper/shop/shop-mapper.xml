<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="shop">
	<!-- 민호 시작 ========================== -->
	<select id="isFollowing" parameterType="map" resultType="_int">
		select count(*) from shop_follow
		where follow = #{follow} and follower = #{follower}
	</select>
	<delete id="shopUnfollow" parameterType="string">
		delete from shop_follow
		where follow = #{follow} and follower = #{follower}
	</delete>
	<insert id="shopfollow" parameterType="string">
		insert into shop_follow
		values (seq_follow_no.nextval, #{follow}, #{follower}, default)
	</insert>
	<select id="selectFollowListCount" parameterType="string" resultType="_int">
		select count(*) from shop s left join shop_follow sf
		on s.shop_no = sf.follow
		where sf.follower = #{follow}
	</select>
	<select id="selectFollowList" parameterType="string" resultType="map">
		select s.*, ceil(sysdate-sf.follow_date) as follow_date from shop s left join shop_follow sf
		on s.shop_no = sf.follow
		where sf.follower = #{follow}
	</select>
	<select id="selectFollowerListCount" parameterType="string" resultType="_int">
		select count(*) from shop s left join shop_follow sf
		on s.shop_no = sf.follower
		where sf.follow = #{follower}
	</select>
	<select id="selectFollowerList" parameterType="string" resultType="map">
		select s.*, ceil(sysdate-sf.follow_date) as follow_date from shop s left join shop_follow sf
		on s.shop_no = sf.follower
		where sf.follow = #{follower}
	</select>
	<select id="loadReviewGrade" resultType="map">
		select * from review_grade
	</select>
	<select id="selectOneShopByShopName" resultType="shop" parameterType="string">
		select * from shop where shop_name = #{shopName}
	</select>
	<insert id="insertReview" parameterType="map">
		insert into shop_review
		values(seq_shop_review.nextval, #{shopNo},#{memberId},#{reviewGrade},#{reviewContent},default,#{productNo})
	</insert>
	<select id="selectShopReviewListCount" parameterType="map" resultType="_int">
		select count(*) from shop_review where shop_no = #{shopNo}
	</select>
	<select id="loadShopReview" resultType="map" parameterType="map">
		select * from shop_review sr join review_grade rg
		on sr.grade_id = rg.grade_id
        join product p
        on sr.product_no = p.product_no where sr.shop_no = #{shopNo}
        order by write_date desc
	</select>
	<!-- ==========================  민호 끝 -->
	
	<!-- 하진 시작 ========================== -->
	<select id="loadMyProductList" resultType="map">
		select P.*, a.photo, st.* from product P left join shop S on p.shop_no=s.shop_no 
                        left join member M on s.member_id =M.member_id 
                        left join product_attachment A on p.product_no = a.product_no
                        left join product_status st on p.product_no=st.product_no
        where M.member_id =#{memberId}
                and a.thumbnail='Y'
	</select>
	
	<select id="totalCountMyProduct" resultType="_int">
		select count(*) from product P left join shop S on p.shop_no=s.shop_no 
                        left join member M on s.member_id =M.member_id 
                        left join product_attachment A on p.product_no = a.product_no
                   
        where M.member_id = #{memberId} 
                and a.thumbnail='Y'
	</select>
	
	<update id="productUpdate">
		update product set reg_date= sysdate where product_no=#{productNo}
	</update>
		
	<delete id="productDelete">
		delete FROM product where product_no = #{productNo}
	</delete>
	
	<update id="saleStatus">
		UPDATE product_status set is_sale=#{select}, reg_date = sysdate where product_no=#{productNo}
	</update>
	
	<select id="totalProductContents" resultType="_int">
		select count(*) from product P left join shop S on p.shop_no=s.shop_no 
                        left join member M on s.member_id =M.member_id 
                        left join product_attachment A on p.product_no = a.product_no
                        left join product_status st on p.product_no=st.product_no
        <where>
        	 M.member_id = #{memberId}
             and a.thumbnail='Y'
             <if test="saleCategory!=null and saleCategory!=''">
    	        and st.is_sale=#{saleCategory}
             </if>
             <if test="searchKeyword!=null and searchKeyword!=''">
	            and p.title like '%${searchKeyword}%'
             </if>
        </where>
	</select>
	
	<select id="loadMyProductManage" parameterType="map" resultType="map">
		select P.*, a.photo,st.* from product P left join shop S on p.shop_no=s.shop_no 
                       	left join member M on s.member_id =M.member_id 
                        left join product_attachment A on p.product_no = a.product_no
                        left join product_status st on p.product_no=st.product_no
        <where>
      		M.member_id = #{memberId}
            and a.thumbnail='Y'
             <if test="saleCategory!=null and saleCategory!=''">
    	        and st.is_sale=#{saleCategory}
             </if>
             <if test="searchKeyword!=null and searchKeyword!=''">
	            and p.title like '%${searchKeyword}%'
             </if>
		</where>
		order by p.reg_date desc
	</select>
	<!-- ==========================  하진 끝 -->
	
	<!-- 근호 시작 ========================== -->
	
	<!-- ==========================  근호 끝 -->
	
	<!-- 지은 시작 ========================== -->
	<update id="shopInCount" parameterType="_int">
		update shop set incount = incount +1 where shop_no = #{shopNo}
	</update>
	
	<select id="selectOpenDate" parameterType="_int" resultType="shop">
		select floor(sysdate - open_date) from shop where member_id = #{memberId}
	</select>
	<!-- ==========================  지은 끝 -->
	
	<!-- 예찬 시작 ========================== -->
	<select id="searchShop" resultType="shop" parameterType="map">
		select * from shop where shop_name like '%${keyword}%'
	</select>
	<select id="selectOneShopByShopNo" parameterType="_int" resultType="shop">
		select * from shop where shop_no = #{shopNo}
	</select>
	<!-- ==========================  예찬 끝 -->
	
	<!-- 주영 시작 ========================== -->
	<resultMap type="map" id="shopMap">
		<result column="since" property="since"/>
		<result column="sale" property="sale"/>
	</resultMap>
	<select id="selectOneShop" resultType="map">
		select 
		S.member_id, s.shop_info, s.image, s.shop_name, s.shop_no, to_char(ceil(sysdate-s.open_date)) as since, s.incount,
        (select count(*) 
            from product p left join product_status ps on p.product_no=ps.product_no 
                    left join shop s on s.shop_no=p.shop_no
                    left join member m on s.member_id=m.member_id
            where ps.is_sale='Y'
                and m.member_id=#{memberId}) sale
		from member M left join shop S on M.member_id = S.member_id 
		where M.member_id = #{memberId}
	</select>
	
	<select id="selectShopByShopNo" resultType="map">
		select 
		S.member_id, s.shop_info, s.image, s.shop_name, s.shop_no, to_char(ceil(sysdate-s.open_date)) as since , s.incount,
     	(select count(*) 
            from product p left join product_status ps on p.product_no=ps.product_no 
                    left join shop s on s.shop_no=p.shop_no
                    left join member m on s.member_id=m.member_id
            where ps.is_sale='Y'
                and s.shop_no=#{shopNo}) sale
		from member M left join shop S on M.member_id = S.member_id 
		where S.shop_no =#{shopNo}
	</select>
	
	<update id="updateShopInfo">
		update shop set shop_info = #{shopInfo} where member_id = #{memberId}
	</update>
	
	<select id="selectShopNameCheck" resultType="_int">
		select count(*) from shop where shop_name = #{shopName}
	</select>
	
	<update id="updateShopName">
		update shop set shop_name = #{shopName} where member_id = #{memberId}
	</update>
	
	<update id="updateShopImg">
		update shop set image = #{image} where member_id = #{memberId}
	</update>
	
	<select id="selectShopInquiry" resultType="map" parameterType="map">
		select i.*, to_char(writer_date,'yyyy-mm-dd hh24:mi:ss') as write_day, s.image  
		from shop_inquiry I left join shop S on i.member_id = s.member_id 
		where i.shop_no = #{shopNo}
		start with inquiry_level = 1
		connect by inquiry_ref = prior inquiry_no
	</select>
	
	<insert id="insertShopInquriy">
		insert into shop_inquiry values(seq_shop_inquiry.nextval, #{memberId}, #{shopNo}, #{inquiryContent}, 1, default, null)
	</insert>
	
	<delete id="deleteShopInquriy">
		delete from shop_inquiry where inquiry_no = #{deleteCommentBtn} or inquiry_ref = #{deleteCommentBtn}
	</delete>
	
	<select id="selectTotalInpuiry" resultType="_int">
		select count(*) as totalInquiry from shop_inquiry where shop_no = #{shopNo} and inquiry_level = 1
	</select>
	
	<insert id="insertInquiryComment">
		insert into shop_inquiry values(seq_shop_inquiry.nextval, #{shopInquiryCommentWriter}, #{shopInquiryCommentShopNo}, #{shopInquiryCommentText}, 2, default, #{inquiryRefNo})
	</insert>
	
	<select id="selectMyWishList" resultType="map">
		select p.*, l.like_no,  a.photo, l.reg_date as like_date 
		from product_like L left join product P on l.product_no = p.product_no
                            left join product_attachment A on p.product_no = a.product_no
		where l.member_id = #{memberId} and  a.thumbnail='Y'
	</select>
	
	<select id="selectMyWishListTotalContents" resultType="_int">
		select count(*) from product_like where member_id = #{memberId}
	</select>
	
	<delete id="deleteWishProduct">
		delete from product_like where member_id = #{memberId} and product_no = #{wishProductNo}
	</delete>
	
	<delete id="deleteShopInquriyComment">
		delete from shop_inquiry where inquiry_no = #{deleteCommentBtn}
	</delete>
	
	<!-- ==========================  주영 끝 -->
	
	<!-- 현규 시작 ========================== -->
	
	<!-- ==========================  현규 끝 -->
</mapper>