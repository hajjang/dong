<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="product">
	<!-- 민호 시작 ========================== -->
	<insert id="insertOrderList" parameterType="orderList">
		insert into order_list values
		(seq_order_no.nextval,#{productNo},#{memberId},#{sido},#{sigungu},#{dong},
		#{address},#{price},'P','N','N',default)
	</insert>
	<insert id="updateMemberPoint" parameterType="orderList">
		insert into point_status values
		(seq_point_status.nextval,#{memberId},#{price},'O',default)
	</insert>
	<!-- ==========================  민호 끝 -->
	
	<!-- 하진 시작 ========================== -->
	<select id="selectCategory" parameterType="map" resultType="map">
		select * from product_category
		where category_id like 'A%'
	</select>
	
	<select id="productStatus" resultType="map">
		select * from product p left join product_status s on p.product_no=s.product_no  where p.product_no = #{shopNo}
	</select>
	
	<delete id="deleteProduct">
		delete from product where product_no = #{productNo}
	</delete>
	<!-- ==========================  하진 끝 -->
	
	<!-- 근호 시작 ========================== -->
	
	<!-- ==========================  근호 끝 -->
	
	<!-- 지은 시작 ========================== -->
	<select id="selectShopMember" resultType="member">
		select * from member where member_id = (select DISTINCT  member_id from (shop S join product P on S.shop_no = P.shop_no) where P.product_no=#{productNo})
	</select>
	
	<!-- ==========================  지은 끝 -->
	
	<!-- 예찬 시작 ========================== -->
	<select id="countLike" parameterType="like" resultType="_int">
		select count(*) from product_like where member_id = #{memberId} and product_no = #{productNo}
	</select>
	<insert id="insertStatus" parameterType="product">
		insert into product_status values(seq_product.currval, 'N', default)
	</insert>
	<insert id="insertLike" parameterType="like">
		insert into product_like values(seq_product_like.nextval, #{memberId}, #{productNo}, default)
	</insert>
	<delete id="deleteLike" parameterType="like">
		delete from product_like where member_id = #{memberId} and product_no = #{productNo}
	</delete>
	
	<select id="selectCategory1" parameterType="category" resultType="category">
		select * from product_category
		<where>
			<if test="categoryRef != null">
				category_ref = #{categoryRef}							
			</if>
			<if test="categoryRef == null">
				category_level = 1							
			</if>
		</where>
	</select>
	
	<select id="selectOneShop" resultType="shop">
		select * from shop where member_id = #{memberId}
	</select>
	
	<insert id="insertProduct">
		insert into product(product_no, shop_no, category_id, title, price, shipping, haggle, 
							info, incount, sido, sigungu, dong, status, is_trade, reg_date)
		values(
			seq_product.nextval, #{shopNo}, #{categoryId}, #{title}, #{price}, #{shipping},
			#{haggle}, #{info}, 0, #{sido}, #{sigungu}, #{dong}, #{status}, #{isTrade}, sysdate)
		<selectKey keyProperty="productNo" resultType="_int" order="AFTER">
			select seq_product.currval from dual
		</selectKey>
	</insert>
	<insert id="insertAttachment">
		insert into product_attachment(attachment_no, product_no, photo, thumbnail)
		values(
			seq_product_attachment.nextval, seq_product.currval ,#{photo}, #{thumbnail}
		)
	</insert>
	
	<select id="selectProductListTop10" parameterType="product" resultMap="product1:1AttachMap">
		select * from (
		select * from (
		    select p.*, pa.photo,
		    (select category_ref from product_category where category_id = p.category_id) category
		    from product p join product_attachment pa on p.product_no = pa.product_no
		    where pa.thumbnail = 'Y'
		    order by reg_date desc
		    )
		where category = #{category_id}
		) join product_status using(product_no)
		where is_sale = 'N'
	</select>
	
	<select id="selectProduct" resultMap="selectProductMap" parameterType="map">
		select p.*, ps.is_sale
		from(select p.*, 
		    (select category_ref from product_category where category_id=p.category_id) ref,
		    (select photo from product_attachment where product_no = p.product_no and thumbnail = 'Y') photo
		     from product p) p join product_status ps on p.product_no = ps.product_no
		<where>
			(
			<if test="sido != null and sido != ''">
				sido=#{sido} 
			</if>
			<if test="sigungu != null and sigungu != ''">
				and sigungu = #{sigungu} 
			</if>
			<if test="dong != null and dong != ''">
				and dong = #{dong} 
			</if>
			<if test="keyword != null and keyword != ''">
				and title like '%${keyword}%' 
			</if>
			) 
			<if test="categoryId != null and categoryId != ''">
				and (category_id = #{categoryId} or ref=#{categoryId})
			</if>
				and is_sale = 'N'
		</where>
	</select>
	
	<select id="countProduct" resultType="_int" parameterType="map">
		select count(*)
		from(select p.*, 
		    (select category_ref from product_category where category_id=p.category_id) ref,
		    (select photo from product_attachment where product_no = p.product_no and thumbnail = 'Y') photo
		     from product p) join (select product_no, is_sale from product_status) using(product_no)
		<where>
			(
			<if test="sido != null and sido != ''">
				sido=#{sido} 
			</if>
			<if test="sigungu != null and sigungu != ''">
				and sigungu = #{sigungu} 
			</if>
			<if test="dong != null and dong != ''">
				and dong = #{dong} 
			</if>
			<if test="keyword != null and keyword != ''">
				and title like '%${keyword}%' 
			</if>
			) 
			<if test="categoryId != null and categoryId != ''">
				and (category_id = #{categoryId} or ref=#{categoryId})
			</if>
				and is_sale = 'N'
		</where>
	</select>
	
	<select id="selectOneProduct" parameterType="_int" resultType="product">
		select * from product where product_no = #{productNo}
	</select>
	<select id="selectAttachment" parameterType="_int" resultType="productAttachment">
		select * from product_attachment where product_no = #{productNo}
	</select>
	
	<select id="selectAd" resultType="map" parameterType="member">
	select *
	from(
	    select * 
	    from product join 
	            (select product_no, photo from product_attachment where thumbnail = 'Y') 
	            using(product_no)
	            join ( select shop_no, avg(score) score
	                    from shop
	                            join shop_review 
	                            using(shop_no)
	                            join review_grade using(grade_id)
	                    GROUP by(shop_no)
	                    ) using(shop_no)
	        ) join (select product_no, is_sale from product_status) using(product_no)
	<where>
		<if test="sido != null and sido != ''">
		sido = #{sido} and 
		sigungu = #{sigungu} and 
		dong = #{dong}
		</if>
		and is_sale = 'N'
	</where> 
	order by reg_date desc
	
	</select>
	
	<resultMap type="map" id="selectProductMap">
		<result column="product_no" property="productNo"/>
		<result column="price" property="price"/>
		<result column="reg_date" property="regDate"/>
		<result column="title" property="title"/>
		<result column="sido" property="sido"/>
		<result column="sigungu" property="sigungu"/>
		<result column="dong" property="dong"/>
		<result column="dong" property="dong"/>
		<result column="photo" property="photo"/>
		<result column="shop_no" property="shopNo"/>
		<result column="category_id" property="categoryId"/>
		<result column="shipping" property="shipping"/>
		<result column="haggle" property="haggle"/>
		<result column="info" property="info"/>
		<result column="incount" property="incount"/>
		<result column="status" property="stauts"/>
		<result column="is_trade" property="isTrade"/>
	</resultMap>
	
	<resultMap type="map" id="product1:1AttachMap">
		<result column="photo" property="photo"/>
	</resultMap>
	<!-- ==========================  예찬 끝 -->
	
	<!-- 주영 시작 ========================== -->
	<select id="loadProductReportCategory" resultType="map">
		select * from report_category
	</select>
	
	<insert id="insertProductReport">
		insert into product_report values (SEQ_PRODUCT_REPORT.nextval, #{memberId}, #{categoryId}, #{productNo}, #{reportContents}, 'N'
		<if test="fileName != null and fileName != ''">
			, #{fileName}
		</if>
		<if test="fileName == null or fileName == ''">
			, null
		</if>
		, default)
	</insert>
	
	<select id="selectProductByProductNo" parameterType="_int" resultType="map">
		select * from product P
		left join product_attachment A on p.product_no = a.product_no
		where p.product_no = #{productNo}
	</select>
	
	<delete id="delImg">
		delete from product_attachment where photo = #{delImgName}
	</delete>
	
	<delete id="deleteOldImgName">
		delete from product_attachment where photo = #{oldImgName} and product_no = #{productNo}
	</delete>
	
	<insert id="insertNewImg">
		insert into product_attachment values (seq_product_attachment.nextval, #{productNo}, #{fileName}, #{isThum})
	</insert>
	
	<update id="productUpdateEnd">
		update product set category_id = #{categoryId}, title = #{title}, price = #{price}, shipping = #{shipping}, 
		haggle = #{haggle}, info = #{info}, sido = #{sido}, sigungu = #{sigungu}, dong = #{dong}, 
		status = #{status}, is_trade = #{isTrade} where product_no = #{productNo}
	</update>
	
	<select id="selectProductCategory" parameterType="_int" resultType="map">
		select * from product P left join product_category C on p.category_id = c.category_id where p.product_no = #{productNo}
	</select>
	
	<select id="selectCategoryRef" resultType="category">
		select * from product_category where category_level = 2 and category_ref = #{categoryRef}
	</select>
	<!-- ==========================  주영 끝 -->
	
	<!-- 현규 시작 ========================== -->
	<insert id="insertProductComment">
	insert into product_comment values(seq_product_comment.nextval,#{productNo},#{memberId},#{contents},#{commentLevel},#{commentRef},sysdate)
	</insert>
		<resultMap type="map" id="resultMap">
		
	</resultMap>
	<select id="selectProductCommentList" resultType="map">
	select p.*,to_char(write_date,'yyyy-mm-dd hh24:mi:ss') as write_day
	from product_comment p
	where product_no=#{productNo}
	start with comment_level = 1
	connect by comment_ref = prior comment_no
	order siblings by comment_no desc,comment_level desc
	</select>
	
	<delete id="deleteLevel1">
	delete from product_comment where comment_no=#{commentNo} or comment_ref=#{commentNo}
	
	</delete>
	
	<select id="countComment" resultType="_int">
	select count(*) from product_comment where product_no=#{productNo}
		</select>
		
		
	<delete id="deleteLevel2">
	delete from product_comment where comment_no=#{commentNo}
	</delete>	
	<!-- ==========================  현규 끝 -->
</mapper>